from PyQt6.QtWidgets import QStyledItemDelegate, QStyleOptionButton, QApplication, QStyle
from PyQt6.QtCore import Qt, QRect, pyqtSignal, QObject
from PyQt6.QtGui import QMouseEvent, QPainter, QColor, QBrush, QFont, QPen

class ButtonClickSignal(QObject):
    clicked = pyqtSignal(int)

class ModernButtonDelegate(QStyledItemDelegate):
    def __init__(self, parent=None, label="üìÑ ‡∏õ‡∏∏‡πà‡∏°", color="#2196F3"):
        super().__init__(parent)
        self.label = label
        self.color = color  # ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏∏‡πà‡∏°
        self.button_signal = ButtonClickSignal()

    def paint(self, painter, option, index):
        painter.save()

        # ‡∏Ç‡∏ô‡∏≤‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏á‡∏ó‡∏µ‡πà
        button_width = 120
        button_height = 32
        radius = 10

        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á cell
        rect = QRect(
            option.rect.x() + (option.rect.width() - button_width) // 2,
            option.rect.y() + (option.rect.height() - button_height) // 2,
            button_width,
            button_height
        )

        # ‡∏ß‡∏≤‡∏î‡∏õ‡∏∏‡πà‡∏°
        painter.setRenderHint(QPainter.RenderHint.Antialiasing)
        painter.setBrush(QBrush(QColor(self.color)))
        painter.setPen(Qt.PenStyle.NoPen)
        painter.drawRoundedRect(rect, radius, radius)

        # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ô‡∏õ‡∏∏‡πà‡∏°
        painter.setPen(QPen(Qt.GlobalColor.white))
        font = QFont("Arial", 12, QFont.Weight.Bold)
        painter.setFont(font)
        painter.drawText(rect, Qt.AlignmentFlag.AlignCenter, self.label)

        painter.restore()
        # painter.save()

        # # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏°‡∏∏‡∏°‡πÇ‡∏Ñ‡πâ‡∏á ‡πÅ‡∏•‡∏∞‡∏Ç‡∏ô‡∏≤‡∏î
        # rect = option.rect.adjusted(5, 5, -5, -5)
        # radius = 10

        # # ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏à‡∏≤‡∏Å‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå
        # painter.setRenderHint(QPainter.RenderHint.Antialiasing)
        # painter.setBrush(QBrush(QColor(self.color)))
        # painter.setPen(Qt.PenStyle.NoPen)
        # painter.drawRoundedRect(rect, radius, radius)

        # # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ô‡∏õ‡∏∏‡πà‡∏°
        # painter.setPen(QPen(Qt.GlobalColor.white))
        # font = QFont("Arial", 12, QFont.Weight.Bold)
        # painter.setFont(font)
        # painter.drawText(rect, Qt.AlignmentFlag.AlignCenter, self.label)

        # painter.restore()

    def editorEvent(self, event, model, option, index):
        if isinstance(event, QMouseEvent) and event.type() == event.Type.MouseButtonRelease:
            self.button_signal.clicked.emit(index.row())
        return True
