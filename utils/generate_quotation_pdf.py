import os
import logging
from datetime import datetime
from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.lib.units import cm
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
from utils.path_utils import resource_path  # ‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πâ resource_path ‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢

# üî§ Register TH Sarabun Fonts
pdfmetrics.registerFont(TTFont('THSarabun', resource_path('resources/assets/fonts/THSarabunNew.ttf')))
pdfmetrics.registerFont(TTFont('THSarabun-Bold', resource_path('resources/assets/fonts/THSarabunNew Bold.ttf')))
pdfmetrics.registerFont(TTFont('THSarabun-Italic', resource_path('resources/assets/fonts/THSarabunNew Italic.ttf')))
pdfmetrics.registerFont(TTFont('THSarabun-BoldItalic', resource_path('resources/assets/fonts/THSarabunNew BoldItalic.ttf')))

def generate_quotation_pdf(order: dict, items: list, output_path: str):
    logging.info(f"üìÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤: {output_path}")

    c = canvas.Canvas(output_path, pagesize=A4)
    width, height = A4

    # ‡∏ï‡∏±‡πâ‡∏á‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    c.setFont("THSarabun-Bold", 18)
    c.drawString(2 * cm, height - 2 * cm, "‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ (Quotation)")

    # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó / ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢ (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)
    c.setFont("THSarabun", 14)
    c.drawString(2 * cm, height - 3 * cm, "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏à‡∏≥‡∏Å‡∏±‡∏î")
    c.drawString(2 * cm, height - 3.8 * cm, "‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: 123 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡πÄ‡∏Ç‡∏ï‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø")
    c.drawString(2 * cm, height - 4.6 * cm, "‡πÇ‡∏ó‡∏£: 02-123-4567")

    # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    c.setFont("THSarabun-Bold", 14)
    c.drawString(12 * cm, height - 3 * cm, f"‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: {order.get('customer_name', '')}")
    c.drawString(12 * cm, height - 3.8 * cm, f"‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: {order.get('customer_address', '')}")
    c.drawString(12 * cm, height - 4.6 * cm, f"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {order.get('date', datetime.now().strftime('%d/%m/%Y'))}")
    c.drawString(12 * cm, height - 5.4 * cm, f"‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤: {order.get('quotation_id', '')}")

    # ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    c.setFont("THSarabun-Bold", 14)
    start_y = height - 7 * cm
    c.drawString(2 * cm, start_y, "‡∏•‡∏≥‡∏î‡∏±‡∏ö")
    c.drawString(3 * cm, start_y, "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
    c.drawString(12 * cm, start_y, "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô")
    c.drawString(15 * cm, start_y, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢")
    c.drawString(18 * cm, start_y, "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°")

    # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    c.setFont("THSarabun", 14)
    y = start_y - 1 * cm
    for i, item in enumerate(items, start=1):
        quantity = item.get('quantity', 0)
        unit_price = item.get('unit_price', 0)
        total_price = quantity * unit_price

        c.drawString(2 * cm, y, str(i))
        c.drawString(3 * cm, y, item.get('name', ''))
        c.drawRightString(14 * cm, y, str(quantity))
        c.drawRightString(17 * cm, y, f"{unit_price:,.2f}")
        c.drawRightString(20 * cm, y, f"{total_price:,.2f}")

        y -= 1 * cm
        # ‡∏ñ‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏¢‡∏≠‡∏∞‡πÄ‡∏Å‡∏¥‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏© ‡πÉ‡∏´‡πâ‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
        if y < 2 * cm:
            c.showPage()
            c.setFont("THSarabun", 14)
            y = height - 2 * cm

    # ‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    total = sum(item.get('quantity', 0) * item.get('unit_price', 0) for item in items)
    c.setFont("THSarabun-Bold", 16)
    c.drawRightString(20 * cm, y - 1 * cm, f"‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô: {total:,.2f} ‡∏ö‡∏≤‡∏ó")

    # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡πâ‡∏≤‡∏¢‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    note = order.get('note', '')
    if note:
        c.setFont("THSarabun-Italic", 12)
        c.drawString(2 * cm, y - 3 * cm, f"‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: {note}")

    c.showPage()
    c.save()

    logging.info(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏ó‡∏µ‡πà: {output_path}")